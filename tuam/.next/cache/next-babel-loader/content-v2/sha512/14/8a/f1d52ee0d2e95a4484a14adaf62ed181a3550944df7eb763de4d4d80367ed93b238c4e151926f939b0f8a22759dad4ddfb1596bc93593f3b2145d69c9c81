{"ast":null,"code":"import i18n from 'i18next'; // import { initReactI18next } from 'react-i18next';\n\nimport { reactI18nextModule } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport translationEN from '../public/locales/en/translation.json';\nimport translationVN from '../public/locales/vn/translation.json';\nimport LanguageDetector from 'i18next-browser-languagedetector'; // don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst Languages = ['en', 'vn'];\nconst resources = {\n  en: {\n    translation: translationEN\n  },\n  vn: {\n    translation: translationVN\n  }\n};\ni18n // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n// .use(initReactI18next)\n.use(reactI18nextModule) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  resources,\n  lang: \"en\",\n  backend: {\n    crossDomain: true\n  },\n  // fallbackLng: 'en',\n  lng: 'vn',\n  debug: true,\n  // whitelist: Languages,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["F:/T-R Website/tuam-react-next-office-space-rental-template/tuam/pages/i18n.js"],"names":["i18n","reactI18nextModule","Backend","translationEN","translationVN","LanguageDetector","Languages","resources","en","translation","vn","use","init","lang","backend","crossDomain","lng","debug","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB,C,CACA;;AACA,SAASC,kBAAT,QAAmC,eAAnC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B,C,CACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,CAAlB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEN;AADX,GADY;AAIhBO,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEL;AADX;AAJY,CAAlB;AAUAJ,IAAI,CACF;AACA;AAFE,CAGDW,GAHH,CAGOT,OAHP,EAIE;AACA;AALF,CAMGS,GANH,CAMON,gBANP,EAOE;AACA;AARF,CASGM,GATH,CASOV,kBATP,EAUE;AACA;AAXF,CAYGW,IAZH,CAYQ;AACJL,EAAAA,SADI;AAEJM,EAAAA,IAAI,EAAE,IAFF;AAGJC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE;AADN,GAHL;AAMJ;AACAC,EAAAA,GAAG,EAAE,IAPD;AAQJC,EAAAA,KAAK,EAAE,IARH;AASJ;AAEAC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAXX,CAZR;AA6BA,eAAenB,IAAf","sourcesContent":["import i18n from 'i18next';\r\n// import { initReactI18next } from 'react-i18next';\r\nimport { reactI18nextModule } from \"react-i18next\";\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport translationEN from '../public/locales/en/translation.json';\r\nimport translationVN from '../public/locales/vn/translation.json';\r\n\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst Languages = ['en', 'vn'];\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: translationEN\r\n  },\r\n  vn: {\r\n    translation: translationVN\r\n  }\r\n};\r\n\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  // .use(initReactI18next)\r\n  .use(reactI18nextModule)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    resources,\r\n    lang: \"en\",\r\n    backend: {\r\n      crossDomain: true,\r\n    },\r\n    // fallbackLng: 'en',\r\n    lng: 'vn',\r\n    debug: true,\r\n    // whitelist: Languages,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}