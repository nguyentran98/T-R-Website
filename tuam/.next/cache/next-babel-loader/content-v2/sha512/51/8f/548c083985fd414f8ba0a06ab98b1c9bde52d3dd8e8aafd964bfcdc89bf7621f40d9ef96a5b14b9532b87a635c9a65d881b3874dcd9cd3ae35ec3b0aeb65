{"ast":null,"code":"// import i18n from 'i18next';\n// import { initReactI18next } from 'react-i18next';\n// import Backend from 'i18next-http-backend';\n// import LanguageDetector from 'i18next-browser-languagedetector';\n// // don't want to use this?\n// // have a look at the Quick start guide \n// // for passing in lng and translations on init\n// const Languages = ['en', 'vn'];\n// i18n\n//   // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n//   // learn more: https://github.com/i18next/i18next-http-backend\n//   .use(Backend)\n//   // detect user language\n//   // learn more: https://github.com/i18next/i18next-browser-languageDetector\n//   .use(LanguageDetector)\n//   // pass the i18n instance to react-i18next.\n//   .use(initReactI18next)\n//   // init i18next\n//   // for all options read: https://www.i18next.com/overview/configuration-options\n//   .init({\n//     backend: {\n//       crossDomain: true,\n//     },\n//     fallbackLng: 'en',\n//     lng: 'vn',\n//     debug: true,\n//     whitelist: Languages,\n//     interpolation: {\n//       escapeValue: false, // not needed for react as it escapes by default\n//     }\n//   });\n// export default i18n;\nvar NextI18Next = require('next-i18next');\n\nmodule.exports = new NextI18Next({\n  otherLanguages: ['de']\n});","map":{"version":3,"sources":["F:/T-R Website/tuam-react-next-office-space-rental-template/tuam/pages/i18n.js"],"names":["NextI18Next","require","module","exports","otherLanguages"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,IAAIH,WAAJ,CAAgB;AAAEI,EAAAA,cAAc,EAAE,CAAC,IAAD;AAAlB,CAAhB,CAAjB","sourcesContent":["// import i18n from 'i18next';\r\n// import { initReactI18next } from 'react-i18next';\r\n\r\n// import Backend from 'i18next-http-backend';\r\n\r\n// import LanguageDetector from 'i18next-browser-languagedetector';\r\n// // don't want to use this?\r\n// // have a look at the Quick start guide \r\n// // for passing in lng and translations on init\r\n\r\n// const Languages = ['en', 'vn'];\r\n\r\n\r\n// i18n\r\n//   // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n//   // learn more: https://github.com/i18next/i18next-http-backend\r\n//   .use(Backend)\r\n//   // detect user language\r\n//   // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n//   .use(LanguageDetector)\r\n//   // pass the i18n instance to react-i18next.\r\n//   .use(initReactI18next)\r\n//   // init i18next\r\n//   // for all options read: https://www.i18next.com/overview/configuration-options\r\n//   .init({\r\n//     backend: {\r\n//       crossDomain: true,\r\n//     },\r\n//     fallbackLng: 'en',\r\n//     lng: 'vn',\r\n//     debug: true,\r\n//     whitelist: Languages,\r\n\r\n//     interpolation: {\r\n//       escapeValue: false, // not needed for react as it escapes by default\r\n//     }\r\n//   });\r\n\r\n\r\n// export default i18n;\r\n\r\nconst NextI18Next = require('next-i18next')\r\n\r\nmodule.exports = new NextI18Next({ otherLanguages: ['de'] })"]},"metadata":{},"sourceType":"script"}