{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector'; // don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nvar Languages = ['en', 'vn'];\ni18n // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n.use(Backend) // detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector) // pass the i18n instance to react-i18next.\n.use(initReactI18next) // init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({\n  backend: {\n    // loadPath: '/locales/resources.json?lng={{lng}}&ns={{ns}}',\n    allowMultiLoading: true,\n    crossDomain: true\n  },\n  fallbackLng: {\n    'en-US': ['en'],\n    'vn-VN': ['vn'],\n    \"default\": ['vn']\n  },\n  debug: true,\n  ns: ['translation'],\n  defaultNS: 'translation',\n  whitelist: Languages,\n  interpolation: {\n    escapeValue: false // not needed for react as it escapes by default\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["F:/T-R Website/tuam-react-next-office-space-rental-template/tuam/pages/i18n.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","Languages","use","init","backend","allowMultiLoading","crossDomain","fallbackLng","debug","ns","defaultNS","whitelist","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B,C,CACA;AACA;AACA;;AAEA,IAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,CAAlB;AAGAJ,IAAI,CACF;AACA;AAFE,CAGDK,GAHH,CAGOH,OAHP,EAIE;AACA;AALF,CAMGG,GANH,CAMOF,gBANP,EAOE;AAPF,CAQGE,GARH,CAQOJ,gBARP,EASE;AACA;AAVF,CAWGK,IAXH,CAWQ;AACJC,EAAAA,OAAO,EAAE;AACP;AACFC,IAAAA,iBAAiB,EAAE,IAFV;AAGPC,IAAAA,WAAW,EAAE;AAHN,GADL;AAMJC,EAAAA,WAAW,EAAE;AACX,aAAS,CAAC,IAAD,CADE;AAEX,aAAS,CAAC,IAAD,CAFE;AAGX,eAAS,CAAC,IAAD;AAHE,GANT;AAWJC,EAAAA,KAAK,EAAE,IAXH;AAYJC,EAAAA,EAAE,EAAE,CAAC,aAAD,CAZA;AAaJC,EAAAA,SAAS,EAAE,aAbP;AAcJC,EAAAA,SAAS,EAAEV,SAdP;AAgBJW,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAhBX,CAXR;AAiCA,eAAehB,IAAf","sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst Languages = ['en', 'vn'];\r\n\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    backend: {\r\n      // loadPath: '/locales/resources.json?lng={{lng}}&ns={{ns}}',\r\n    allowMultiLoading: true,\r\n      crossDomain: true\r\n    },\r\n    fallbackLng: {\r\n      'en-US': ['en'],\r\n      'vn-VN': ['vn'],\r\n      default: ['vn'],\r\n    },\r\n    debug: true,\r\n    ns: ['translation'],\r\n    defaultNS: 'translation',\r\n    whitelist: Languages,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}